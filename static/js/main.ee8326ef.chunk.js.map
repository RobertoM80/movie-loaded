{"version":3,"sources":["config/actions/movieActions.js","config/actions/types.js","assets/images/svgSprite.svg","hooks/weather.js","components/shared/WeatherInfo.js","components/shared/Infos.js","components/Title.js","components/MainNavLinks.js","components/MainNav.js","components/Header.js","assets/images/heartLoader.svg","components/shared/Loader.js","components/Footer.js","components/shared/ErrorBoundary.js","config/reusableFunctions.js","components/shared/MovieCard.js","config/actions/overlayActions.js","hooks/overlay.js","assets/images/close.png","components/shared/Overlay.js","hooks/movies.js","components/shared/OverlayTrailer.js","components/views/AllMoviesView.js","components/views/MovieDetailsView.js","App.js","config/reducers/chuckNorrisReducer.js","config/reducers/moviesReducer.js","config/reducers/overlayReducer.js","config/reducers/movieTrailerReducer.js","config/store.js","registerServiceWorker.js","index.js"],"names":["imageUrlBase","imageSizes","FETCH_CHUCK","FETCH_YOUTUBE_MOVIE_START","FETCH_YOUTUBE_MOVIE_SUCCESS","FETCH_YOUTUBE_MOVIE_FAILURE","ACTIVATE_OVERLAY","UPDATE_VIEW","FETCH_MOVIE_START","FETCH_MOVIE_SUCCESS","FETCH_MOVIE_FAILURE","thisYear","Date","getFullYear","tmbdKey","tmdbApiKey","upcoming","highestRated","configurationUrl","axios","get","then","response","data","result","images","secure_base_url","poster_sizes","WeatherInfosContext","createContext","weatherReducer","state","initializeState","action","type","error","status","temperature","payload","location","icon","WeatherInfosProvider","props","useState","display","setDisplay","useReducer","dispatch","storePosition","a","coords","latitude","longitude","currently","apparentTemperature","timezone","console","useEffect","navigator","geolocation","getCurrentPosition","CTepm","toFixed","City","split","infos","weatherIcon","sprite","Provider","value","Data","style","width","height","marginRight","xlinkHref","displayName","WeatherInfo","undefined","useContext","Error","useWeatherInfos","className","Infos","toDateString","today","Title","MainNavLinks","to","MainNav","Header","Loader","loading","src","heartLoader","Footer","ErrorBoundary","place","hasError","info","this","setState","children","Component","getExerpt","str","len","slice","join","MovieCard","index","movie","useDispatch","startTrailer","movieTitle","isActiveOverlay","wichAnimation","types","videoId","items","id","currentYoutubeTrailerMovieId","currentYoutubeTrailerMovieTitle","fetchYoutubeTrailer","urlReadableTitle","encodeURIComponent","toLowerCase","poster_path","alt","title","overview","role","aria-label","onClick","toString","useOverlay","useSelector","overlay","closeDialog","setTimeout","overlayContainer","useRef","document","createElement","shouldOverlayClose","e","target","indexOf","current","addEventListener","body","appendChild","removeEventListener","removeChild","Overlay","ReactDOM","createPortal","Close","useMovies","movies","setMovies","activeMovie","setActiveMovie","useLocation","popular","rated","trailer","active","pathname","substr","filter","OverlayTrailer","backdrop_path","dangerouslySetInnerHTML","__html","AllMoviesView","isOverlayActive","toUpperCase","length","map","MovieDetailsView","match","params","App","moviesStatus","isLoading","includes","movieUrl","Object","values","url","Promise","resolve","reject","results","keys","find","k","allSettled","promise","isFullfilled","view","updateActive","exact","path","render","component","image","chuckNorrisReducer","moviesReducer","animateInOut","overlayReducer","movieTrailerReducer","middleware","thunk","rootReducer","combineReducers","chuckNorris","store","createStore","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","isLocalhost","Boolean","hostname","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","catch","basename","getElementById","URL","process","origin","fetch","headers","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.ee8326ef.chunk.js","sourcesContent":["import * as types from \"./types\";\nimport axios from \"axios\";\nconst thisYear = new Date().getFullYear();\nconst baseUrlTmdb = \"https://api.themoviedb.org/3/\";\n// only for example code don't store api keys in React.\n// Not even in env vars. Have a backend instead that do that.\nconst tmbdKey = \"96e63474e758f0f3c342b883c6991953\";\nconst youtubeKey = \"AIzaSyDsTb3fhXB01D5yjfjFooWgNnNxDlrjWpo\";\nconst tmdbApiKey = `&api_key=${tmbdKey}`;\nconst best_2018 = `discover/movie?primary_release_year=${thisYear}&sort_by=vote_average.desc`;\nconst upcoming = `movie/upcoming?api_key=${tmbdKey}&language=en-US&page=1`;\nconst highestRated = `movie/top_rated?api_key=${tmbdKey}&language=en-US&page=1`;\nconst mostPopular = \"discover/movie?sort_by=popularity.desc\";\nconst configurationUrl = `https://api.themoviedb.org/3/configuration?api_key=${tmbdKey}`;\nconst baseUrlYoutube = \"https://www.googleapis.com/youtube/v3/\";\nexport let imageUrlBase;\nexport let imageSizes;\n\nconst configurationData = axios\n  .get(configurationUrl)\n  .then((response) => response.data)\n  .then((result) => {\n    imageUrlBase = result.images.secure_base_url;\n    imageSizes = result.images.poster_sizes;\n    return result;\n  });\n\n// configurationData;\n\nexport const fetchMovies = (type) => async (dispatch) => {\n  try {\n    const movieUrl = {\n      upcoming: upcoming,\n      rated: highestRated,\n      popular: mostPopular,\n    };\n\n    dispatch({ type: types.FETCH_MOVIE_START });\n    let movies;\n    movies = Object.values(movieUrl).map((url) => {\n      return new Promise(async (resolve, reject) => {\n        const {\n          data: { results: movies },\n        } = await axios.get(baseUrlTmdb + url + tmdbApiKey);\n\n        resolve({\n          ...movies,\n          type: Object.keys(movieUrl).find((k) => movieUrl[k] === url),\n        });\n      });\n    });\n\n    const allMovies = await Promise.allSettled(movies);\n\n    allMovies.map((promise) => {\n      const isFullfilled = promise.status === \"fulfilled\";\n      const type = promise.value.type;\n      const movies = Object.values(promise.value).filter(\n        (value) => typeof value != \"string\"\n      );\n\n      if (isFullfilled) {\n        dispatch({\n          type: types.FETCH_MOVIE_SUCCESS,\n          payload: { type, movies },\n        });\n      } else {\n        dispatch({\n          type: types.FETCH_MOVIE_FAILURE,\n          payload: { type, error: `Impossible to retreive ${type} movies` },\n        });\n      }\n    });\n  } catch (error) {\n    console.error(error);\n    dispatch({\n      type: types.FETCH_MOVIE_FAILURE,\n      payload: { type: null, error },\n    });\n  }\n};\n\nexport const fetchYoutubeTrailer = (movieTitle) => async (dispatch) => {\n  try {\n    dispatch({ type: types.FETCH_YOUTUBE_MOVIE_START, payload: true });\n\n    const response = await axios.get(\n      `${baseUrlYoutube}search?q=${movieTitle} trailer official&maxResults=1&part=snippet&key=${youtubeKey}`\n    );\n\n    const { videoId } = response.data.items[0].id;\n\n    dispatch({\n      type: types.FETCH_YOUTUBE_MOVIE_SUCCESS,\n      payload: {\n        currentYoutubeTrailerMovieId: videoId,\n        currentYoutubeTrailerMovieTitle: movieTitle,\n      },\n    });\n  } catch (error) {\n    dispatch({\n      type: types.FETCH_YOUTUBE_MOVIE_FAILURE,\n      payload: { type: null, error },\n    });\n  }\n};\n\nexport const updateActive = (view) => (dispatch) => {\n  dispatch({ type: types.UPDATE_VIEW, payload: { view } });\n};\n","export const FETCH_WEATHER = \"FETCH_WEATHER\";\nexport const FETCH_CHUCK = \"FETCH_CHUCK\";\n\nexport const IS_LOADING_WEATHER = \"IS_LOADING_WEATHER\";\nexport const IS_LOADING_CHUCK = \"IS_LOADING_CHUCK\";\nexport const IS_LOADING_MOVIE = \"IS_LOADING_MOVIE\";\n\nexport const FETCH_YOUTUBE_MOVIE_START = \"FETCH_YOUTUBE_MOVIE_START\";\nexport const FETCH_YOUTUBE_MOVIE_SUCCESS = \"FETCH_YOUTUBE_MOVIE_SUCCESS\";\nexport const FETCH_YOUTUBE_MOVIE_FAILURE = \"FETCH_YOUTUBE_MOVIE_FAILURE\";\n\nexport const ACTIVATE_OVERLAY = \"ACTIVATE_OVERLAY\";\nexport const UPDATE_VIEW = \"UPDATE_VIEW\";\n\nexport const FETCH_MOVIE_START = \"FETCH_MOVIE_START\";\nexport const FETCH_MOVIE_SUCCESS = \"FETCH_MOVIE_SUCCESS\";\nexport const FETCH_MOVIE_FAILURE = \"FETCH_MOVIE_FAILURE\";\n","export default __webpack_public_path__ + \"static/media/svgSprite.d08225b1.svg\";","import {\n  useEffect,\n  useState,\n  useContext,\n  createContext,\n  useReducer,\n} from \"react\";\nimport { useSelector } from \"react-redux\";\nimport sprite from \"assets/images/svgSprite.svg\";\nimport axios from \"axios\";\n\nconst WeatherInfosContext = createContext();\nWeatherInfosContext.displayName = \"WeatherContext\";\n\nfunction useWeatherInfos() {\n  if (useContext(WeatherInfosContext) === undefined) {\n    throw new Error(\n      \"useWeatherInfos must be used within a WeatherInfosProvider\"\n    );\n  }\n  return useContext(WeatherInfosContext);\n}\n\nfunction weatherReducer(state = initializeState, action) {\n  switch (action.type) {\n    case \"start update\":\n      return {\n        ...state,\n        error: null,\n        status: \"pending\",\n      };\n    case \"finish update\":\n      return {\n        ...state,\n        status: \"resolved\",\n        temperature: action.payload.temperature,\n        location: action.payload.location,\n        icon: action.payload.icon,\n        error: null,\n      };\n    case \"finish update\":\n      return {\n        ...state,\n        error: action.payload,\n        status: \"rejected\",\n        temperature: \"\",\n        location: \"\",\n        icon: \"\",\n      };\n\n    default:\n      return state;\n  }\n}\n\nfunction WeatherInfosProvider(props) {\n  const [display, setDisplay] = useState(\"\");\n  const [state, dispatch] = useReducer(weatherReducer, {\n    status: \"idle\",\n    error: null,\n    temperature: \"\",\n    location: \"\",\n    icon: \"\",\n  });\n\n  const { temperature, location, icon, status } = state;\n\n  useEffect(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(storePosition);\n    } else {\n      dispatch({\n        type: \"fail update\",\n        payload: \"Geolocation is not supported by this browser.\",\n      });\n    }\n  }, []);\n\n  useEffect(() => {\n    let CTepm = ((temperature - 32) * 0.5556).toFixed(1) || \"cannot get temp\";\n    let City = location.split(\"/\")[1] || \"cannot get city\";\n    setDisplay(`${CTepm} C  -  ${City}`);\n  }, [temperature, location]);\n\n  async function storePosition({ coords: { latitude, longitude } }) {\n    const baseUrl = \"https://movie-loaded.herokuapp.com\";\n    const coords = `latitude=${latitude}&longitude=${longitude}`;\n    // Only for example code don't store api keys in React.\n    // Not even in env vars. Have a backend instead that do that.\n    const key = \"38cd89e1c279727b5a599e5804a22333\";\n\n    dispatch({ type: \"start update\" });\n\n    try {\n      const { data } = await axios.get(\n        `${baseUrl}/api?api=weather&key=${key}&${coords}`\n      );\n      dispatch({\n        type: \"finish update\",\n        payload: {\n          temperature: data.currently.apparentTemperature,\n          icon: data.currently.icon,\n          location: data.timezone,\n        },\n      });\n    } catch (err) {\n      console.error(err);\n      dispatch({ type: \"fail update\", payload: err });\n    }\n  }\n\n  const weatherIcon = `${sprite}#${icon || \"clear-day\"}`;\n  const infos = { display, weatherIcon, status };\n\n  return <WeatherInfosContext.Provider value={infos} {...props} />;\n}\n\nexport { WeatherInfosProvider, useWeatherInfos };\n","import { useWeatherInfos } from \"hooks/weather\";\n\nfunction WeatherInfo(props) {\n  const { display, weatherIcon, status } = useWeatherInfos();\n\n  return (\n    <p className=\"weather d-flex align-item-center m-0\">\n      {status === \"pending\" || status === \"idle\" ? (\n        \"...loading\"\n      ) : status === \"rejected\" ? (\n        \"an error occured\"\n      ) : (\n        <Data weatherIcon={weatherIcon} display={display} />\n      )}\n    </p>\n  );\n}\n\nfunction Data({ weatherIcon, display }) {\n  return (\n    <>\n      <svg style={{ width: \"25px\", height: \"20px\", marginRight: \"5px\" }}>\n        <use xlinkHref={weatherIcon} />\n      </svg>\n      {display}\n    </>\n  );\n}\n\nexport default WeatherInfo;\n","import { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport WeatherInfo from \"./WeatherInfo\";\nimport { WeatherInfosProvider } from \"hooks/weather\";\n\nfunction Infos() {\n  const [today] = useState(new Date().toDateString());\n\n  return (\n    <div className=\"infos-container py-1 d-flex flex-row justify-content-center align-items-center\">\n      <p className=\"date align-self-center m-0\">{today}</p>\n      <p className=\"divider align-self-center m-0 mx-3\">|</p>\n\n      <WeatherInfosProvider>\n        <WeatherInfo />\n      </WeatherInfosProvider>\n    </div>\n  );\n}\n\nexport default Infos;\n","const Title = (props) => {\n  return (\n    <div className=\"title\">\n      <h1 className=\"text-center\">Movie Loaded</h1>\n      <h2 className=\"text-center\">Infos about your favourite movies</h2>\n    </div>\n  );\n};\n\nexport default Title;\n","import { Link } from \"react-router-dom\";\n\nfunction MainNavLinks() {\n  return (\n    <nav className=\"links-container d-flex flex-row justify-content-start align-items-center\">\n      <p className=\"m-0 mx-2\">\n        <Link className=\"\" to=\"/upcoming\">\n          Best Movies\n        </Link>\n      </p>{\" \"}\n      |\n      <p className=\"m-0 mx-2\">\n        <Link className=\"\" to=\"/rated\">\n          High Rate\n        </Link>\n      </p>{\" \"}\n      |\n      <p className=\"m-0 mx-2\">\n        <Link className=\"\" to=\"/popular\">\n          Popular\n        </Link>\n      </p>\n    </nav>\n  );\n}\n\nexport default MainNavLinks;\n","import MainNavLinks from \"components/MainNavLinks\";\nimport SearchBar from \"components/shared/SearchBar\";\nimport \"css/MainNav.css\";\n\nfunction MainNav() {\n  return (\n    <div className=\"navbar-container py-1 d-flex flex-row justify-content-between\">\n      <MainNavLinks />\n\n      {/* <SearchBar /> */}\n    </div>\n  );\n}\n\nexport default MainNav;\n","import Infos from \"components/shared/Infos\";\nimport Title from \"components/Title\";\nimport MainNav from \"components/MainNav\";\nimport \"css/Header.css\";\n\nfunction Header() {\n  return (\n    <header>\n      <Title />\n\n      <Infos />\n\n      <MainNav />\n    </header>\n  );\n}\n\nexport default Header;\n","export default __webpack_public_path__ + \"static/media/heartLoader.46fd28c5.svg\";","import React from \"react\";\nimport heartLoader from \"assets/images/heartLoader.svg\";\n\nconst Loader = (props) => {\n  if (props.loading) {\n    return (\n      <div className=\"showLoader d-flex flex-column justify-content-center align-items-center\">\n        <img style={{ width: \"100px\" }} src={heartLoader} />\n      </div>\n    );\n  }\n\n  return <div className=\"noLoader\"></div>;\n};\n\nexport default Loader;\n","function Footer() {\n  return (\n    <div className=\"py-3 my-2\">\n      <hr />\n      <h2>\n        for this h2roject we used and thank loading.io, <br />\n        darksky.net,\n        <br />\n        themoviedb.org\n      </h2>\n    </div>\n  );\n}\n\nexport default Footer;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass ErrorBoundary extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      place: this.props.place,\n      hasError: false,\n    };\n  }\n\n  componentDidCatch(error, info) {\n    this.setState((state) => ({ ...state, hasError: true }));\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return (\n        <div>\n          Sorry, something wasn't quite right in {this.state.place} section!{\" \"}\n        </div>\n      );\n    } else {\n      return this.props.children;\n    }\n  }\n}\n\nErrorBoundary.propTypes = {\n  place: PropTypes.string.isRequired,\n};\n\nexport default ErrorBoundary;\n","export const getExerpt = (str, len) => {\n\n    let exerpt = str.split(' ').slice(0, len);\n    return exerpt.join(' ');\n\n}","import { useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { openOverlay } from \"config/actions/overlayActions\";\nimport {\n  fetchYoutubeTrailer,\n  imageUrlBase,\n  imageSizes,\n} from \"config/actions/movieActions\";\nimport { getExerpt } from \"config/reusableFunctions\";\nimport \"css/MovieCard.css\";\n\nfunction MovieCard({ index, movie }) {\n  const dispatch = useDispatch();\n\n  function startTrailer(movieTitle) {\n    dispatch(openOverlay());\n    dispatch(fetchYoutubeTrailer(movieTitle));\n  }\n\n  function urlReadableTitle(movieTitle) {\n    return encodeURIComponent(movieTitle.split(\" \").join(\"-\").toLowerCase());\n  }\n\n  return (\n    <div key={index.toString()} className=\"col-sm-12 col-md-6 col-lg-4 my-3\">\n      <div className=\"container-fluid d-flex px-0\">\n        <div className=\"img-container\">\n          <img\n            src={imageUrlBase + imageSizes[1] + movie.poster_path}\n            alt=\"poster image\"\n            className=\"rounded poster-image\"\n          />\n        </div>\n\n        <div className=\"movie-info px-3 d-flex flex-column justify-content-around\">\n          <h2 className=\"movie--title\">{movie.title}</h2>\n          <div className=\"description\">\n            <p className=\"d-lg-none d-xl-block\">\n              {getExerpt(movie.overview, 20)}...\n              <Link\n                className=\"\"\n                to={\"/movie/details/\" + urlReadableTitle(movie.title)}\n              >\n                [continue]\n              </Link>\n            </p>\n            <p className=\"d-none d-lg-block d-xl-none\">\n              {getExerpt(movie.overview, 10)}...\n              <Link\n                className=\"\"\n                to={\"/movie/details/\" + urlReadableTitle(movie.title)}\n              >\n                [continue]\n              </Link>\n            </p>\n          </div>\n          <div\n            className=\"btn-group btn-group-sm mr-auto\"\n            role=\"group\"\n            aria-label=\"Basic example\"\n          >\n            <button\n              type=\"button\"\n              className=\"btn btn-sm btn-warning\"\n              onClick={() => startTrailer(movie.title)}\n            >\n              Watch Trailer\n            </button>\n            <Link\n              className=\"\"\n              to={\"/movie/details/\" + urlReadableTitle(movie.title)}\n            >\n              <button type=\"button\" className=\"btn btn-sm btn-info\">\n                Read More\n              </button>\n            </Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nMovieCard.propTypes = {\n  movie: PropTypes.object.isRequired,\n  index: PropTypes.number.isRequired,\n};\n\nexport default MovieCard;\n","import { ACTIVATE_OVERLAY } from './types';\n\n\nexport const closeOverlay = () => dispatch => {\n\n    dispatch({\n        type: ACTIVATE_OVERLAY,\n        payload: {\n            isActiveOverlay: true,\n            wichAnimation: 'fadeOutRightBig'\n        }\n    })\n\n    setTimeout(() => {\n        dispatch({\n            type: ACTIVATE_OVERLAY,\n            payload: {\n                isActiveOverlay: false,\n                wichAnimation: ''\n            }\n        })\n    }, 300);\n\n}\n\nexport const openOverlay = () => dispatch => {\n\n    dispatch({\n        type: ACTIVATE_OVERLAY,\n        payload: {\n            isActiveOverlay: true,\n            wichAnimation: 'fadeInLeftBig'\n        }\n    })\n\n}\n","import { useEffect, useRef } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { closeOverlay } from \"config/actions/overlayActions\";\n\nfunction useOverlay() {\n  const wichAnimation = useSelector((state) => state.overlay.wichAnimation);\n  const dispatch = useDispatch();\n  const closeDialog = () => dispatch(closeOverlay());\n\n  let overlayContainer = useRef(document.createElement(\"div\"));\n  useEffect(() => {\n    overlayContainer.current.className =\n      \"overlay-container d-flex justify-content-center align-items-center\";\n    overlayContainer.current.addEventListener(\"click\", (e) =>\n      shouldOverlayClose(e)\n    );\n    document.body.appendChild(overlayContainer.current);\n\n    return () => {\n      overlayContainer.current.removeEventListener(\"click\", (e) =>\n        shouldOverlayClose(e)\n      );\n      document.body.removeChild(overlayContainer.current);\n    };\n  }, []);\n\n  function shouldOverlayClose(e) {\n    if (e.target.className.indexOf(\"overlay-container\") > -1) closeDialog();\n  }\n\n  return { wichAnimation, overlayContainer, closeDialog };\n}\n\nexport { useOverlay };\n","export default __webpack_public_path__ + \"static/media/close.6e9b2c81.png\";","import ReactDOM from \"react-dom\";\nimport { useOverlay } from \"hooks/overlay\";\nimport Close from \"assets/images/close.png\";\nimport \"css/Overlay.css\";\n\nfunction Overlay({ children }) {\n  const { wichAnimation, overlayContainer, closeDialog } = useOverlay();\n\n  return ReactDOM.createPortal(\n    <div className={\"overlay animated \" + wichAnimation}>\n      <div className=\"card-header\">\n        <span onClick={(e) => closeDialog()} className=\"float-right\">\n          <img src={Close} alt=\"close button\" className=\"img-fluid cose-btn\" />\n        </span>\n      </div>\n      <div className=\"card-body\">{children}</div>\n    </div>,\n    overlayContainer.current\n  );\n}\n\nexport default Overlay;\n","import { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router\";\nimport { useSelector } from \"react-redux\";\n\nfunction useMovies() {\n  const [movies, setMovies] = useState([]);\n  const [activeMovie, setActiveMovie] = useState(null);\n  let location = useLocation();\n  const popular = useSelector((state) => state.movies.popular);\n  const upcoming = useSelector((state) => state.movies.upcoming);\n  const rated = useSelector((state) => state.movies.rated);\n  const currentYoutubeTrailerMovieId = useSelector(\n    (state) => state.trailer.currentYoutubeTrailerMovieId\n  );\n  const currentYoutubeTrailerMovieTitle = useSelector(\n    (state) => state.trailer.currentYoutubeTrailerMovieTitle\n  );\n  const active = location.pathname.substr(1);\n\n  useEffect(() => {\n    let activeMovie = movies.filter(\n      (movie) => movie.title === currentYoutubeTrailerMovieTitle\n    )[0];\n    setActiveMovie(activeMovie);\n  }, [currentYoutubeTrailerMovieTitle]);\n\n  useEffect(() => {\n    const mov = { popular, upcoming, rated };\n    setMovies(mov[active]);\n  }, [location, popular, upcoming, rated]);\n\n  return {\n    active,\n    movies,\n    activeMovie,\n    currentYoutubeTrailerMovieTitle,\n    currentYoutubeTrailerMovieId,\n  };\n}\n\n// function useActiveMovies() {\n//   const movies = useMovies();\n//   const [activeMovie, setActiveMovie] = useState(null);\n//   const currentYoutubeTrailerMovieId = useSelector(\n//     (state) => state.trailer.currentYoutubeTrailerMovieId\n//   );\n//   const currentYoutubeTrailerMovieTitle = useSelector(\n//     (state) => state.trailer.currentYoutubeTrailerMovieTitle\n//   );\n\n//   useEffect(() => {\n//     let activeMovie = movies.filter(\n//       (movie) => movie.title === currentYoutubeTrailerMovieTitle\n//     )[0];\n//     setActiveMovie(activeMovie);\n//   }, [currentYoutubeTrailerMovieTitle]);\n\n//   return {\n//     movies,\n//     activeMovie,\n//     currentYoutubeTrailerMovieTitle,\n//     currentYoutubeTrailerMovieId,\n//   };\n// }\n\nexport { useMovies };\n","import { imageUrlBase, imageSizes } from \"config/actions/movieActions\";\nimport { getExerpt } from \"config/reusableFunctions\";\nimport { useMovies } from \"hooks/movies\";\nimport { useEffect } from \"react\";\n\nfunction OverlayTrailer() {\n  const {\n    active,\n    movies,\n    activeMovie,\n    currentYoutubeTrailerMovieTitle,\n    currentYoutubeTrailerMovieId,\n  } = useMovies();\n\n  function iframe() {\n    const html = `\n    <iframe \n      style=\"width:45vw;height:25vw\" \n      src=\"https://www.youtube.com/embed/${currentYoutubeTrailerMovieId}\" \n      frameborder=\"0\" \n      allow=\"autoplay; \n      encrypted-media\"\n      allowfullscreen\n    ></iframe>`;\n    return { __html: html };\n  }\n\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"row\">\n        <div className=\"col-sm-5\">\n          {activeMovie && (\n            <div className=\"overlay-trailer-infos\">\n              <img\n                src={imageUrlBase + imageSizes[4] + activeMovie.backdrop_path}\n                alt=\"poster image\"\n                className=\"rounded poster-image img-fluid d-none d-lg-block\"\n              />\n              <h3 className=\"my-3 d-none d-sm-block\">{activeMovie.title}</h3>\n              <p className=\"d-none d-md-block d-lg-block d-xl-block\">\n                {activeMovie.overview}\n              </p>\n              <p className=\"d-none d-sm-block d-md-none\">\n                {getExerpt(activeMovie.overview, 10)}...\n              </p>\n            </div>\n          )}\n        </div>\n        <div className=\"col-sm-7\">\n          <div dangerouslySetInnerHTML={iframe()} />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default OverlayTrailer;\n","import ErrorBoundary from \"components/shared/ErrorBoundary\";\nimport MovieCard from \"components/shared/MovieCard\";\nimport Overlay from \"components/shared/Overlay\";\nimport OverlayTrailer from \"components/shared/OverlayTrailer\";\nimport { useSelector } from \"react-redux\";\nimport { useMovies } from \"hooks/movies\";\n\nfunction AllMoviesView(props) {\n  const { active, movies } = useMovies();\n  const isOverlayActive = useSelector((state) => state.overlay.isOverlayActive);\n  const title = `${active[0].toUpperCase()}${active.substr(1)} Movies...`;\n\n  return (\n    <ErrorBoundary place=\"Popular\">\n      <div className=\"latest-movies\">\n        {isOverlayActive && (\n          <Overlay>\n            <OverlayTrailer />\n          </Overlay>\n        )}\n\n        <h3 className=\"text-center mt-2 mb-4\">{title}</h3>\n        <div className=\"row\">\n          {movies.length > 0 ? (\n            movies.map((movie, index) => {\n              return (\n                <MovieCard key={movie.title} index={index} movie={movie} />\n              );\n            })\n          ) : (\n            <h1>No Movies</h1>\n          )}\n        </div>\n      </div>\n    </ErrorBoundary>\n  );\n}\n\nexport default AllMoviesView;\n","function MovieDetailsView({ match }) {\n  return <div>{match.params.id} - UNDER CONSTRUCTION .... </div>;\n}\n\nexport default MovieDetailsView;\n","import { useCallback, useEffect } from \"react\";\nimport { Route, Switch, Redirect, useLocation } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fetchMovies, updateActive } from \"config/actions/movieActions\";\nimport Header from \"components/Header\";\nimport Loader from \"components/shared/Loader\";\nimport Footer from \"components/Footer\";\nimport AllMoviesView from \"components/views/AllMoviesView\";\nimport MovieDetailsView from \"components/views/MovieDetailsView\";\nimport \"css/App.css\";\n\nfunction App() {\n  const moviesStatus = useSelector((state) => state.movies.status);\n  const isLoading = [\"pending\", \"idle\"].includes(moviesStatus);\n  const dispatch = useDispatch();\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    try {\n      dispatch(fetchMovies());\n    } catch (error) {\n      console.info(error);\n    }\n  }, []);\n\n  useEffect(() => {\n    const view = pathname.substr(1);\n    dispatch(updateActive(view));\n  }, [pathname]);\n\n  return (\n    <div className=\"App container-fluid\">\n      <Loader loading={isLoading} />\n\n      <Header></Header>\n\n      <Switch>\n        <Route\n          exact\n          path=\"/\"\n          render={() => {\n            return <Redirect to=\"/popular\" />;\n          }}\n        />\n\n        <Route\n          path={[\"/popular\", \"/rated\", \"/upcoming\"]}\n          component={AllMoviesView}\n        />\n\n        <Route path=\"/movie/details/:id\" component={MovieDetailsView} />\n\n        <Route\n          render={() => {\n            return <h1 className=\"text-center\">404 - Page Not Found!</h1>;\n          }}\n        />\n      </Switch>\n\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n\n//       {/* <Route path=\"/movie/details/:id\" component={movieDetailsView} /> */}\n","import { FETCH_CHUCK } from '../actions/types';\n\nconst initializeState = {\n    value: '',\n    image: ''\n}\n\nconst chuckNorrisReducer = (state = initializeState, action) => {\n    switch (action.type) {\n        case FETCH_CHUCK:\n            return {\n                ...state,\n                value: action.payload.value,\n                image: action.payload.image\n            }\n\n        default:\n            return state;\n    }\n}\n\nexport default chuckNorrisReducer;","import * as types from \"../actions/types\";\n\nconst initializeState = {\n  status: \"idle\",\n  active: null,\n  popular: [],\n  rated: [],\n  upcoming: [],\n  error: null,\n};\n\nconst moviesReducer = (state = initializeState, action) => {\n  switch (action.type) {\n    case types.FETCH_MOVIE_START:\n      return {\n        ...state,\n        status: \"pending\",\n        error: null,\n      };\n    case types.FETCH_MOVIE_SUCCESS:\n      return {\n        ...state,\n        status: \"success\",\n        [action.payload.type]: action.payload.movies,\n        error: null,\n      };\n    case types.FETCH_MOVIE_FAILURE:\n      return {\n        ...state,\n        status: \"failure\",\n        error: action.payload.error,\n      };\n    case types.UPDATE_VIEW:\n      return {\n        ...state,\n        active: action.payload.view,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default moviesReducer;\n","import { ACTIVATE_OVERLAY } from '../actions/types';\n\nconst initializeState = {\n    isOverlayActive: false,\n    animateInOut: ''\n}\n\nconst overlayReducer = (state = initializeState, action) => {\n    switch (action.type) {\n        case ACTIVATE_OVERLAY:\n            return {\n                ...state,\n                isOverlayActive: action.payload.isActiveOverlay,\n                wichAnimation: action.payload.wichAnimation\n            }\n\n        default:\n            return state;\n    }\n}\n\nexport default overlayReducer;","import * as types from \"../actions/types\";\n\nconst initializeState = {\n  status: \"idle\",\n  error: null,\n  currentYoutubeTrailerMovieId: \"\",\n  currentYoutubeTrailerMovieTitle: \"\",\n};\n\nconst movieTrailerReducer = (state = initializeState, action) => {\n  switch (action.type) {\n    case types.FETCH_YOUTUBE_MOVIE_START:\n      return {\n        ...state,\n        error: null,\n        status: \"pending\",\n      };\n\n    case types.FETCH_YOUTUBE_MOVIE_SUCCESS:\n      return {\n        ...state,\n        error: null,\n        status: \"success\",\n        currentYoutubeTrailerMovieId:\n          action.payload.currentYoutubeTrailerMovieId,\n        currentYoutubeTrailerMovieTitle:\n          action.payload.currentYoutubeTrailerMovieTitle,\n      };\n\n    case types.FETCH_YOUTUBE_MOVIE_FAILURE:\n      return {\n        ...state,\n        error: action.payload.error,\n        status: \"failure\",\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default movieTrailerReducer;\n","import { createStore, applyMiddleware, combineReducers, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport chuckNorrisReducer from \"config/reducers/chuckNorrisReducer\";\nimport moviesReducer from \"config/reducers/moviesReducer\";\nimport overlayReducer from \"config/reducers/overlayReducer\";\nimport movieTrailerReducer from \"config/reducers/movieTrailerReducer\";\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst rootReducer = combineReducers({\n  chuckNorris: chuckNorrisReducer,\n  movies: moviesReducer,\n  trailer: movieTrailerReducer,\n  overlay: overlayReducer,\n});\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(\n    applyMiddleware(...middleware),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\n\nexport default store;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://goo.gl/SC7cgQ\"\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./config/store\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter basename=\"/movie-loaded\">\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\nregisterServiceWorker();\n"],"sourceRoot":""}